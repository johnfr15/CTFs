import hashlib
import re

# Constants
F = FiniteField(2**256 - 189)
R = PolynomialRing(F, "x")

# Define the hash function
H = lambda n: int(hashlib.sha256(n).hexdigest(), 16)

# Sample coefficients - this should be populated with actual coefficients of f
coefficients = [
    18774791113974767935258083831049304182810978727580883251496908820639185611260,
    108925627358651051798670231757447607862382091134410260917359817864170354232444,
    51071942681013658455449083200263464206069169496517505483819158625209273851171,
    100873449596485744713347508884003007785168768293706905972322186297028089445232,
    45601514538925307494340392527700261429783350140721398305658573305260297737304,
    111508167616287683989434169643713884059294349295676232484911912910227036901285,
    112227545970954854036912629846889579593354709118156226852479711849480673575958,
    84265011390598280632527043819355612952334659981467779064060972830296734803422,
    103161038860408577399560332204072285851980676644541851125160195601548983925312,
    75603311144179746439534422663548692891926452726895260034942783355987260912687,
    77521100120978985434706419593786233163350298278382577254397679067286173086257,
    11729520009033325188214867673006526019653218102477850296219008915508788035258,
    66795904469039609325835910794975648001148577841529509311011993107955283709180,
    8931629921800862145616964572924422081881081026036615851376233336901279641648,
    34282975895014207127858534773160547646222226100664566699431008945815322071263,
    65520962407963427025551020328096244131901130274067821631704007961268540464428,
    5498067165864472272776258745234846490731094170960880373569863092675033798425,
    67563939550199034360288431494533035174249645510812847293633754734943866058912,
    33674570313151050855337721686411654902488857439278718492667579351575677163056,
    83450259912215960217531764734865026801063435602749733034237562628955944961215,
    77018214370116599595706888749806056367447903350123742187778843856774465173735,
    23410629007861697294655908711616291594323282329809105096593471582607417857188,
    16795951457632967907260395488972679537699281420039600914133493294730174311338
]


# Reconstruct the polynomial
f = sum(c * R.gen()**i for i, c in enumerate(reversed(coefficients)))

# Evaluate the polynomial at known x values to obtain the hashes
# Since the original x values were divided in chunks of 4 bytes, assume you have n values
n = len(coefficients)  # You may want to know how many coefficients you have
reconstructed_hashes = [f(i) for i in range(n)]  # Evaluate f at different values

# Convert hashes back to integers
reconstructed_hashes = [int(hashlib.sha256(bytes(hash_val)).hexdigest(), 16) for hash_val in reconstructed_hashes]

# Print the reconstructed hashes
print("Reconstructed Hashes:")
for hash_val in reconstructed_hashes:
    print(hash_val)
