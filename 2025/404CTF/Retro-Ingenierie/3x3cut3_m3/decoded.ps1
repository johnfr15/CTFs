$S0ptlC = "==" ;
$zeli4qmKb1p3u2sD67NtAW9MX = $S0ptlC.ToCharArray() ; [array]::Reverse($zeli4qmKb1p3u2sD67NtAW9MX) ; -join $zeli4qmKb1p3u2sD67NtAW9MX 2>&1> $null ;
$q4uUCL9kbwXDjmvcsdY = [SYStEm.TeXt.ENCODinG]::utf8.gETsTRiNG([sYStEm.convErt]::froMBaSe64StrING("$zeli4qmKb1p3u2sD67NtAW9MX")) ;
Write-Host "Decoded string: $q4uUCL9kbwXDjmvcsdY"

