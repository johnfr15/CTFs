$6zN0xl15D84kpBAVZTLwm = "" ;
$lkr0wQj = $6zN0xl15D84kpBAVZTLwm.ToCharArray() ; [array]::Reverse($lkr0wQj) ; -join $lkr0wQj 2>&1> $null ;
$rCCMGEWZvfiangSsp4MsppI = [sysTEM.TEXt.ENCOdinG]::utF8.GeTSTRING([SySTEm.CoNvert]::fRomBAsE64sTRInG("$lkr0wQj")) ;
Write-Host "Decoded string (rCCMGEWZvfiangSsp4MsppI): $rCCMGEWZvfiangSsp4MsppI"

